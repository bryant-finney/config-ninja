#!/bin/sh

# shellcheck disable=SC2046  # cannot surround with quotes: breaks export command
! test -f ./.env || export $(grep -oE '^[^ #]{1,}=[^#]{1,}' .env | xargs)

if command -v poetry >/dev/null; then

    test -f poetry.lock || poetry install

    touch .poetry.lock.md5 # create an empty file if it doesn't exist to protect the following command

    if command -v md5sum >/dev/null; then
        md5sum=md5sum
    else
        md5sum="md5 -r"
    fi

    # hash `poetry.lock` and compare it to the last time dependencies were installed
    MD5_LAST="$(cut -d' ' -f1 <.poetry.lock.md5)"
    MD5_CURRENT="$($md5sum poetry.lock | cut -d' ' -f1)"

    if [ "$MD5_LAST" != "$MD5_CURRENT" ]; then
        printf 'ðŸš€ Detected changes in \033[0;36mpoetry.lock\033[0m; installing dependencies\n'
        poetry install --all-extras && echo "$MD5_CURRENT" >.poetry.lock.md5

        # display environment info
        poetry env info
    fi

    # shellcheck disable=SC1091
    test -f "$(poetry env info -p)/bin/activate" && . "$(poetry env info -p)/bin/activate"

    # shellcheck disable=SC2154
    test -z "${PRE_COMMIT_DISABLED}" &&
        command -v pre-commit >/dev/null &&
        pre-commit install --install-hooks
else
    printf '\e[31m%s\e[0m\n' "poetry installation not found"
    printf '\n%s\n\n' "please install poetry from https://python-poetry.org/docs/#installation"
fi
