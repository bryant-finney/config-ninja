# Run this workflow to test Python code changes.
name: ðŸŽ¨ poe (push)

on:
  push:
    branches: [main]
    tags: [v*]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/poe
        with:
          poe-task: lint
          poetry-groups: main,dev,lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/poe
        with:
          poe-task: test
          poetry-groups: main,dev,test

      - if: always()
        name: Upload coverage reports to codecov.io
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    needs:
      - lint
      - test

    outputs:
      new: ${{ steps.semantic-release.outputs.released }}
      version: ${{ steps.semantic-release.outputs.version }}

    permissions:
      id-token: write
      contents: write
      packages: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - id: semantic-release
        uses: python-semantic-release/python-semantic-release@v8.7.0
        with:
          commit: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          root_options: --strict -vv

  docs:
    if: needs.release.outputs.new != 'true'
    needs:
      - lint
      - test
      - release

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/download-artifact@v4
        with:
          name: lint-docs

      - uses: actions/download-artifact@v4
        with:
          name: test-docs

      - run: |
          mkdir -p ./docs/reports
          mv ./reports/* ./docs/reports

      - uses: ./.github/actions/poe
        with:
          artifacts: ""
          poe-task: setup-versioning

      - uses: ./.github/actions/poe
        with:
          artifacts: ""
          poe-task: docs

      - name: Fix permissions
        run: |
          chmod -c -R +rX "path/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: docs

  deploy:
    if: needs.release.outputs.new != 'true'
    environment:
      name: GitHub Pages
      url: ${{ steps.deploy.outputs.page_url }}

    needs:
      - release
      - docs

    permissions:
      pages: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
